riak_mongo makes Riak look like Mongo to clients.

In the first step, it will allow Mongo drivers to seamlessly connect to it using Mongo Wire Protocol and to map to the underlying Riak data store. This can help migrate the data store of existing MongoDB based applications to Riak.

In the next step it also might be interesting to have a Mongo based Riak backend. 

Run it in a Riak node instance using:

> riak_mongo:start(temporary, "127.0.0.1", 32323).

or even:

> application:start(riak_mongo).

which will use same default address and port settings.

We use the low level riak_kv Erlang API to talk to the local store. You can connect to it from the Mongo shell (in this case, on the same machine) using:

$ mongo --verbose -port 32323 collection

And do some basic commands:

> db.things.insert({a:1, b:2})
> db.things.findOne()
> db.things.find({a:1})
> db.things.find({a:1}, {b:1})
> db.things.remove({a:1})
> db.things.remove()

Buckets in the Riak store will be named like "collection.things" - the prefix is thus the name of the database you connect from the Mongo shell to.

No auth, SSL and no IPv6 are considered yet - the implementiation is growing.

Authors:

Pavlo Baron (pb@pbit.org)
Kresten "the coding god" Krab Thorup (krab@trifork.com)

Feedback and helpers are welcome at any time.
